#!/bin/zsh -eu

command=$0:t
this_script="$(realpath $0)"
PROJECT=$this_script:h
cd $PROJECT

# right side main screen
declare -A aw3225qf=(
    [name]="AW3225QF"
    [bounds_5k]="{0, 0, 2560, 1440}"
    [bounds_4k]="{0, 0, 1920, 1080}"
    [icc_macos]="/Library/ColorSync/Profiles/Displays/AW3225QF-804B0C18-17D6-4522-87AF-FD4673AC0A3F.icc"

    # measured at brightness 61% 120cd 2025-06-09
    #  - factory setting
    #  - standard mode
    [icc_calibrite]="${HOME}/Library/ColorSync/Profiles/AW3225QF_Caribrite_61_120cd_2025-06-09.icc"
    # measured at brightness 83% 120cd 2025-06-09
    #  - factory setting
    #  - dolby vision bright mode
    [icc_lldv_calibrite]="${HOME}/Library/ColorSync/Profiles/AW3225QF_LLDV_Caribrite_83_120_cd_2025-06-09_2.icc"
    [icc_default]="${HOME}/Library/ColorSync/Profiles/AW3225QF D65.icc"
    [icc_lldv]="${HOME}/Library/ColorSync/Profiles/AW3225QF LLDV.icc"
)

# left side sub screen
declare -A s3221qs=(
    [name]="DELL S3221QS"
    [bounds_5k]="{0, 0, -2560, 1440}"
    [bounds_4k]="{0, 0, -1920, 1080}"
    [icc_macos]="/Library/ColorSync/Profiles/Displays/DELL S3221QS-BA8ED8A6-1083-4F0F-AA4C-B08CF99C1318.icc"
    # measured at brightness 46% 120cd 2025-06-09
    #  - factory setting
    #  - standard mode
    [icc_calibrite]="${HOME}/Library/ColorSync/Profiles/DELL_S3221QS_Calibrite_46_120cd_2025-06-09.icc"
    [icc_default]="${HOME}/Library/ColorSync/Profiles/DELL S3221QS D65.icc"
)

icc_dci_p3="/System/Library/ColorSync/Profiles/DCI(P3) RGB.icc"
icc_display_p3="/System/Library/ColorSync/Profiles/Display P3.icc"


if which gdate &> /dev/null; then
    alias ts='gdate "+%Y-%m-%d %H:%M:%S.%3N"'
else
    alias ts='date "+%Y-%m-%d %H:%M:%S"'
fi

#---------------------------------------------------
# aw3225qf normal settings
#---------------------------------------------------
declare -A aw3225qf_normal_set_0=(
    [hdr]=off
)
declare -A aw3225qf_normal_set_1=(
    [resolution]=2560x1440
    # [refreshRate]=48-240Hz
    [refreshRate]=120Hz
)
declare -A aw3225qf_normal_set_2=(
    [colorProfileURL]="file://${aw3225qf[icc_default]// /%20}"
    [brightness]=0.61
)
# fine-tuned white point to suit macbook
# declare -A aw3225qf_normal_set_3=(
#     [redHardwareGain]=0.94
#     [greenHardwareGain]=1.0
#     [blueHardwareGain]=0.98
# )

#---------------------------------------------------
# s3221qs normal settings
#---------------------------------------------------
declare -A s3221qs_normal_set_0=(
    [hdr]=off
)
declare -A s3221qs_normal_set_1=(
    [resolution]=2560x1440
    [refreshRate]=60Hz
)

# GPU dithering causes flickering
declare -A s3221qs_normal_set_2=(
    [gpuDithering]=off
    [colorProfileURL]="file://${s3221qs[icc_default]// /%20}"
    [brightness]=0.52
)
# declare -A s3221qs_normal_set_3=(
#     [redHardwareGain]=0.90
#     [greenHardwareGain]=0.86
#     [blueHardwareGain]=1.0
# )

#---------------------------------------------------
# dolby vision 4K settings
#---------------------------------------------------
declare -A aw3225qf_dolby_vision_4k_set_0=(
    [resolution]=1920x1080
    [refreshRate]=60Hz
)
declare -A aw3225qf_dolby_vision_4k_set_1=(
    [hdr]=on
)
declare -A aw3225qf_dolby_vision_4k_set_2=(
    [connectionMode]=bpc:12+range:limited
)
declare -A aw3225qf_dolby_vision_4k_set_3=(
    [colorProfileURL]="file://${icc_dci_p3// /%20}"
    [brightness]=1.0
)
# declare -A aw3225qf_dolby_vision_4k_set_4=(
#     [redHardwareGain]=1.0
#     [greenHardwareGain]=0.90
#     [blueHardwareGain]=1.0
# )

#---------------------------------------------------
# dolby vision 5K settings
#---------------------------------------------------
declare -A aw3225qf_dolby_vision_5k_set_0=(
    [resolution]=2560x1440
    [refreshRate]=60Hz
)
declare -A aw3225qf_dolby_vision_5k_set_1=(
    [hdr]=on
)
declare -A aw3225qf_dolby_vision_5k_set_2=(
    [connectionMode]=bpc:12+range:limited
)
declare -A aw3225qf_dolby_vision_5k_set_3=(
    [colorProfileURL]="file://${icc_dci_p3// /%20}"
    [brightness]=0.65
)
# declare -A aw3225qf_dolby_vision_5k_set_4=(
#     [redHardwareGain]=1.0
#     [greenHardwareGain]=0.90
#     [blueHardwareGain]=1.0
# )

local netflixURL="https://www.netflix.com"

usage() {
    print -rC1 -- \
          "" \
          "Usage:" \
          "    $this_script:t <-h|--help>             Show this help." \
          "    $this_script:t --setup                 Install dependencies (BetterDisplay.app, betterdisplaycli, iccmax)." \
          "    $this_script:t --data                  Output display analysis data to 'data' folder." \
          "    $this_script:t --install[=<location>]  Install utility commands to specifid location. default: ~/.local/bin" \
          ""
    exit 0
}

log() {
    print -P -n "%F{green}[$(ts)]%f "
    print "$@"
}

error() {
    print -P -n "%F{red}[$(ts)] Error:%f"
    print "$@"
}

setup() {
    brew update
    brew install --cask betterdisplay
    brew install waydabber/betterdisplay/betterdisplaycli
    brew install iccmax
    brew cleanup

    # node packages
    npm install
}

# create display analysis data
data() {
    cd $PROJECT
    rm -rf temp
    mkdir -p data
    mkdir -p temp
    local macbook_alive=false

    if scp -o 'ConnectTimeout 1' "macbookair.local:/Library/ColorSync/Profiles/Displays/Color LCD-37D8832A-2D66-02CA-B9F7-8F30A301B230.icc" temp/; then
        iccToXml "temp/Color LCD-37D8832A-2D66-02CA-B9F7-8F30A301B230.icc" temp/mba_m2_lcd_macos_icc.xml
        macbook_alive=true
    fi

    iccToXml "/System/Library/ColorSync/Profiles/Display P3.icc" "temp/Display P3.xml"

    iccToXml ~/Library/ColorSync/Profiles/linear-mac.icc temp/calibrite_liner_mac.xml

    # DELL display profiles included windows driver
    iccToXml ~/Library/ColorSync/Profiles/Alienware_AW3225QF_Native.icm temp/aw3225qf_dell_icm.xml
    iccToXml ~/Library/ColorSync/Profiles/Alienware_AW3225QF_HDR\ True\ Black\ 400.icm temp/aw3225qf_hdr400_dell_icm.xml

    # generated by Display Calibrator Assistant
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D50.icc temp/aw3225qf_d50_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D60.icc temp/aw3225qf_d60_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D65.icc temp/aw3225qf_d65_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D70.icc temp/aw3225qf_d70_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D80.icc temp/aw3225qf_d80_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D90.icc temp/aw3225qf_d90_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/AW3225QF\ D93.icc temp/aw3225qf_d93_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/DELL\ S3221QS\ D50.icc temp/s3221qs_d50_macos_icc.xml
    iccToXml ~/Library/ColorSync/Profiles/DELL\ S3221QS\ D65.icc temp/s3221qs_d65_macos_icc.xml

    iccToXml "$aw3225qf[icc_macos]" temp/aw3225qf_macos_icc.xml
    iccToXml "$aw3225qf[icc_calibrite]" temp/aw3225qf_calibrite_icc.xml
    iccToXml "$aw3225qf[icc_lldv_calibrite]" temp/aw3225qf_lldv_calibrite_icc.xml

    iccToXml "$s3221qs[icc_macos]" temp/s3221qs_macos_icc.xml
    iccToXml "$s3221qs[icc_calibrite]" temp/s3221qs_calibrite_icc.xml

    extcxf temp/aw3225qf_calibrite_icc.xml temp/aw3225qf_calibrite_cxf.xml
    extcxf temp/aw3225qf_lldv_calibrite_icc.xml temp/aw3225qf_lldv_calibrite_cxf.xml
    extcxf temp/s3221qs_calibrite_icc.xml temp/s3221qs_calibrite_cxf.xml

    echo '<plist>' > temp/aw3225qf_IOMobileFramebufferShim.xml
    ioreg -arw0 -c IOMobileFramebufferShim | xpath -e "//dict[key[text()='DisplayAttributes']/following-sibling::dict[key[text()='ProductAttributes']/following-sibling::dict[key[text()='ProductName']/following-sibling::string[text()='AW3225QF']]]]" >> temp/aw3225qf_IOMobileFramebufferShim.xml
    echo '</plist>' >> temp/aw3225qf_IOMobileFramebufferShim.xml

    echo '<plist>' > temp/s3221qs_IOMobileFramebufferShim.xml
    ioreg -arw0 -c IOMobileFramebufferShim | xpath -e "//dict[key[text()='DisplayAttributes']/following-sibling::dict[key[text()='ProductAttributes']/following-sibling::dict[key[text()='ProductName']/following-sibling::string[text()='DELL S3221QS']]]]" >> temp/s3221qs_IOMobileFramebufferShim.xml
    echo '</plist>' >> temp/s3221qs_IOMobileFramebufferShim.xml

    xmlplist2json temp/aw3225qf_IOMobileFramebufferShim.xml data/aw3225qf_IOMobileFramebufferShim.json
    xmlplist2json temp/s3221qs_IOMobileFramebufferShim.xml data/s3221qs_IOMobileFramebufferShim.json
    prettier --write 'data/*.json'

    for xml in temp/*.xml; do
        xmllint --format "$xml" --output "data/${xml:t}"
    done
    rm -rf temp
}

betterdisplay() {
    local disp_var=$1
    local prefix=$2
    local -A display=(${(Pkv@)disp_var})


    local i=0
    # bug? betterdisplaycli can't get hdr=off
    local cur_hdr=$(betterdisplaycli get -name="$display[name]" -hdr 2> /dev/null)
    [[ -z $cur_hdr ]] && cur_hdr=off
    log "$display[name]: current hdr state: $cur_hdr"

    while true; do
        local var=${disp_var}_${prefix}_set_$i
        if [[ ! -v "$var" ]]; then
            break
        fi
        local -A params=(${(Pkv@)var})
        local args=()
        local hdr_changed=false
        for key in ${(k)params}; do
            if [[ $key == hdr ]]; then
                if [[ $cur_hdr ==  $params[$key] ]]; then
                    continue
                else
                    hdr_changed=true
                fi
            fi
            args+=(-$key=$params[$key])
        done
        if (( $#args )); then
            if betterdisplaycli set -name="$display[name]" $args[*]; then
                log "$display[name]: succeeded: betterdisplaycli set ${args[*]}"
                $hdr_changed && sleep 3 || sleep 0.5
            else
                error "$display[name]: failed: betterdisplaycli set ${args[*]}"
            fi
        fi
        i=$((i + 1))
    done
}

netflix() {
    local disp_var=$1
    local -A display=(${(Pkv@)disp_var})

    betterdisplay "$disp_var" dolby_vision_4k

    osascript <<-EOF
tell application "Safari"
  activate
  set netflix to null
  set startPage to null
  repeat with thisWindow in windows
    repeat with thisTab in tabs of thisWindow
      set thisURL to URL of thisTab
      -- already open netflix ?
      if thisURL contains "$netflixURL" then
        set netflix to {w:thisWindow, t:thisTab}
        exit repeat
      end if
      -- start page ?
      if thisURL is "favorites://" then
        set startPage to {w:thisWindow, t:thisTab}
      end if
    end repeat
    if netflix is not null then exit repeat
  end repeat
  if netflix is null then
    if startPage is null then
      make new document with properties {URL:"$netflixURL"}
      set netflix to {w:front window, t:current tab of front window}
    else
      set URL of t of startPage to "$netflixURL"
      set netflix to startPage
    end if
  end if
  set index of w of netflix to 1
  tell front window
    set current tab to (t of netflix)
    set bounds to $display[bounds_4k]
  end tell
end tell
EOF
}

apple_tv() {
    local disp_var=$1
    local -A display=(${(Pkv@)disp_var})

    betterdisplay $disp_var dolby_vision_4k

    osascript <<-EOF
tell application "TV"
  activate
  set tvWin to null
  repeat with aWin in windows
    if name of aWin is "TV" then
      set tvWin to aWin
    end if
  end repeat
 if tvWin is not null then
   tell tvWin
     set bounds to $display[bounds_4k]
     set visible to true
   end tell
 end if
end tell
EOF
}

reset_displays() {
    betterdisplay aw3225qf normal
    betterdisplay s3221qs normal
}

generate_icc() {
    local disp_var=$1
    local -A display=(${(Pkv@)disp_var})
}

install() {
    local install_location=$1
    local commmands=(
        apple-tv
        netflix
        dolby-vision-4k
        dolby-vision-5k
        reset-display
    )
    if [[ ! -d $install_location ]]; then
        error "Install location not found: $install_location"
        exit 1
    fi
    if [[ ! -w $install_location ]]; then
        error "Install location not writable: $install_location"
        exit 1
    fi

    for cmd in $commmands; do
        ln -sf $this_script $install_location/$cmd
        log "Installed: $install_location/$cmd"
    done

    cd $PROJECT
    rm -rf temp
    mkdir -p temp

    native-icc-v2 "$(whoami)" "AW3225QF Native" data/aw3225qf_macos_icc.xml "icc/AW3225QF ICC v2 Template.xml" "$PROJECT/temp"
    native-icc-v2 "$(whoami)" "S3221QS Native" data/s3221qs_macos_icc.xml "icc/S3221QS ICC v2 Template.xml" "$PROJECT/temp"
    native-icc-v2 "$(whoami)" "MBA M2 LCD Native" data/mba_m2_lcd_macos_icc.xml "icc/MBA M2 LCD ICC v2 Template.xml" "$PROJECT/temp"

    cat02-icc-v4 "$(whoami)" "AW3225QF CAT02" data/aw3225qf_macos_icc.xml "icc/ICC v4 Template.xml" "$PROJECT/temp"
    cat02-icc-v4 "$(whoami)" "S3221QS CAT02" data/s3221qs_macos_icc.xml "icc/ICC v4 Template.xml" "$PROJECT/temp"
    cat02-icc-v4 "$(whoami)" "MBA M2 LCD CAT02" data/mba_m2_lcd_macos_icc.xml "icc/ICC v4 Template.xml" "$PROJECT/temp"

    # install icc profiles
    for icc_xml in temp/*.xml; do
        if iccFromXml "$icc_xml" "${icc_xml:r}.icc"; then
            log "Converted: ${icc_xml:r}.icc"
        else
            error "Failed to execute iccFromXml: $icc_xml"
        fi
    done

    for icc in temp/*.icc; do
        cp $icc ~/Library/ColorSync/Profiles
    done
    for icc in temp/*.icc; do
        scp -o 'ConnectTimeout 1' $icc macbookair.local:~/Library/ColorSync/Profiles || true
    done
    rm -rf temp
}

activate_direnv() {
    cd $PROJECT
    direnv allow
    eval "$(direnv export zsh)"
}

if [[ $command == $(basename $this_script) ]]; then
    zparseopts -D -E -F -- \
               {h,-help}=help \
               -setup=setup \
               -data=data \
               -install::=install
    if (( $#help )); then
        usage
        return
    elif (( $#setup )); then
        setup
        return
    fi

    activate_direnv

    if (( $#data )); then
        data
    elif (( $#install )); then
        local loc=${install##--install}
        loc=${loc##=}
        if [[ -z $loc ]]; then
            loc=~/.local/bin
        fi
        install $loc
    fi
    return
fi

case $command in
    apple-tv )
        apple_tv aw3225qf
        ;;
    netflix )
        netflix aw3225qf
        ;;
    dolby-vision-4k )
        betterdisplay aw3225qf dolby_vision_4k
        ;;
    dolby-vision-5k )
        betterdisplay aw3225qf dolby_vision_5k
        ;;
    reset-display )
        reset_displays
        ;;
esac
